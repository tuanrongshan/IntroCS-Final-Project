class HP{
    field int xPos, yPos;
    field int point; //HP: 0~12
    field int slotlength, height;
    constructor HP new(int x, int y, int l, int h){
        var int i;
        let xPos = x;
        let yPos = y;
        let slotlength = l;
        let height = h;
        let i = 0;
        let point = 12;
        do HealthBar.drawHPslots(x, y, 16, 23);
        while (i < 12){
            do HealthBar.drawHP(x+1+(i*slotlength), y, slotlength, height);
            let i = i+1;
        }
        // do HealthBar.drawright(12+position);
        return this;
    }
    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }

    method boolean injure (int damage){
        // true: HP>0  false: HP=0
        var int i;
        let i = damage;
        while ((point > 0) & (i > 0)){
            do HealthBar.eraseHP(xPos+1+((point-1)*slotlength), yPos, slotlength, height);
            let point = point-1;
            let i = i-1;
        }
        // do Output.println();
        // do Output.printInt(point);
        if (point > 0) {return 1;}
        else {return 0;}
    }
    method void heal (int blood){
        var int i;
        let i = blood;
        while ((point < 12) & (i > 0)){
            let point = point+1;
            do HealthBar.drawHP(xPos+1+((point-1)*slotlength), yPos, slotlength, height);
            let i = i-1;
        }
        return;
    }
    method boolean live (){
        if (point > 0) {return true;}
        return false;
    }
}